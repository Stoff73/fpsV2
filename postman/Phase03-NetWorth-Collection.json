{
	"info": {
		"_postman_id": "phase03-net-worth-collection",
		"name": "Phase 03 - Net Worth API",
		"description": "Complete API testing collection for Phase 03 Net Worth endpoints including overview, breakdown, trend, assets summary, joint assets, and refresh endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Net Worth Controller",
			"item": [
				{
					"name": "GET Net Worth Overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success field', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"pm.test('Response contains total_assets', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('total_assets');",
									"});",
									"",
									"pm.test('Response contains total_liabilities', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('total_liabilities');",
									"});",
									"",
									"pm.test('Response contains net_worth', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('net_worth');",
									"});",
									"",
									"pm.test('Response contains breakdown', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('breakdown');",
									"    pm.expect(jsonData.data.breakdown).to.have.property('property');",
									"    pm.expect(jsonData.data.breakdown).to.have.property('investments');",
									"    pm.expect(jsonData.data.breakdown).to.have.property('cash');",
									"    pm.expect(jsonData.data.breakdown).to.have.property('business');",
									"    pm.expect(jsonData.data.breakdown).to.have.property('chattels');",
									"});",
									"",
									"pm.test('Net worth equals total_assets minus total_liabilities', function () {",
									"    var jsonData = pm.response.json();",
									"    var expectedNetWorth = jsonData.data.total_assets - jsonData.data.total_liabilities;",
									"    pm.expect(jsonData.data.net_worth).to.equal(expectedNetWorth);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/overview",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "overview"]
						}
					}
				},
				{
					"name": "GET Asset Breakdown",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response contains breakdown data', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('breakdown');",
									"});",
									"",
									"pm.test('Breakdown contains percentages', function () {",
									"    var jsonData = pm.response.json();",
									"    var breakdown = jsonData.data.breakdown;",
									"    ",
									"    // Check that percentages add up to ~100 (allowing for rounding)",
									"    var total = (breakdown.property_percentage || 0) + ",
									"                (breakdown.investments_percentage || 0) + ",
									"                (breakdown.cash_percentage || 0) + ",
									"                (breakdown.business_percentage || 0) + ",
									"                (breakdown.chattels_percentage || 0);",
									"    ",
									"    if (breakdown.property + breakdown.investments + breakdown.cash + breakdown.business + breakdown.chattels > 0) {",
									"        pm.expect(total).to.be.closeTo(100, 1);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/breakdown",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "breakdown"]
						}
					}
				},
				{
					"name": "GET Net Worth Trend (12 months)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response contains trend data', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('trend');",
									"    pm.expect(jsonData.data.trend).to.be.an('array');",
									"});",
									"",
									"pm.test('Trend data has 12 months by default', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.trend.length).to.equal(12);",
									"});",
									"",
									"pm.test('Each trend entry has date and net_worth', function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.data.trend.forEach(function(entry) {",
									"        pm.expect(entry).to.have.property('date');",
									"        pm.expect(entry).to.have.property('net_worth');",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/trend",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "trend"]
						}
					}
				},
				{
					"name": "GET Net Worth Trend (6 months)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Trend data has 6 months when parameter is provided', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.trend.length).to.equal(6);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/trend?months=6",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "trend"],
							"query": [
								{
									"key": "months",
									"value": "6"
								}
							]
						}
					}
				},
				{
					"name": "GET Net Worth Trend - Invalid Months",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test('Validation error for months parameter', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('errors');",
									"    pm.expect(jsonData.errors).to.have.property('months');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/trend?months=50",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "trend"],
							"query": [
								{
									"key": "months",
									"value": "50"
								}
							]
						}
					}
				},
				{
					"name": "GET Assets Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response contains assets summary', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('assets');",
									"});",
									"",
									"pm.test('Assets summary has all categories', function () {",
									"    var jsonData = pm.response.json();",
									"    var assets = jsonData.data.assets;",
									"    pm.expect(assets).to.have.property('property');",
									"    pm.expect(assets).to.have.property('investments');",
									"    pm.expect(assets).to.have.property('cash');",
									"    pm.expect(assets).to.have.property('business');",
									"    pm.expect(assets).to.have.property('chattels');",
									"});",
									"",
									"pm.test('Each category has count and total', function () {",
									"    var jsonData = pm.response.json();",
									"    var assets = jsonData.data.assets;",
									"    ",
									"    Object.keys(assets).forEach(function(key) {",
									"        pm.expect(assets[key]).to.have.property('count');",
									"        pm.expect(assets[key]).to.have.property('total');",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/assets-summary",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "assets-summary"]
						}
					}
				},
				{
					"name": "GET Joint Assets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response contains joint assets', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('joint_assets');",
									"    pm.expect(jsonData.data.joint_assets).to.be.an('array');",
									"});",
									"",
									"pm.test('Joint assets have ownership information', function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.joint_assets.length > 0) {",
									"        var asset = jsonData.data.joint_assets[0];",
									"        pm.expect(asset).to.have.property('ownership_percentage');",
									"        pm.expect(asset).to.have.property('ownership_type');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/joint-assets",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "joint-assets"]
						}
					}
				},
				{
					"name": "POST Refresh Net Worth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response confirms cache refresh', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('message');",
									"});",
									"",
									"pm.test('Response contains refreshed net worth data', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('total_assets');",
									"    pm.expect(jsonData.data).to.have.property('total_liabilities');",
									"    pm.expect(jsonData.data).to.have.property('net_worth');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/refresh",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "refresh"]
						}
					}
				}
			]
		},
		{
			"name": "Authentication Tests",
			"item": [
				{
					"name": "GET Overview - Unauthenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test('Requires authentication', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/overview",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "overview"]
						}
					}
				},
				{
					"name": "GET Assets Summary - Unauthenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/net-worth/assets-summary",
							"host": ["{{base_url}}"],
							"path": ["api", "net-worth", "assets-summary"]
						}
					}
				}
			]
		}
	]
}
